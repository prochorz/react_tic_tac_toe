{"version":3,"sources":["helper/index.js","bus/tictactoe/reducer.js","init/rootReducer.js","bus/tictactoe/types.js","init/store.js","bus/tictactoe/actions.js","components/Board/index.js","components/Popup/index.js","App.js","serviceWorker.js","index.js"],"names":["winCombinations","delay","duration","arguments","length","undefined","Promise","resolve","setTimeout","findBestStep","matrix","user","bestKeySteps","possibility","indexOf","map","el","i","filter","key","countSteps","step","Math","floor","random","forEach","combination","_combination2","Object","slicedToArray","a","b","c","temp","tempPossibility","elm","findIndex","initialState","history","rootReducer","combineReducers","tictactoe","state","action","type","objectSpread2","concat","toConsumableArray","payload","devtools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancedStore","compose","applyMiddleware","store","createStore","addItem","text","clear","Board","users","currentUser","status","winner","_reset","_this","setState","Array","fill","dispatch","_goRobot","_this$state","then","rival","robot","_selectCell","_this$state2","rowText","ceil","colText","Date","toTimeString","slice","_clickOnCell","_this$state3","_statusText","_this$state4","_this$state4$winner","winnerUser","this","prevProps","prevState","_this$state5","join","winnerId","winnerCombination","every","_combination","findWinner","_this2","_this$state6","_showPopup","props","showPopup","matrixJSX","styleClass","react_default","createElement","onClick","className","Component","Popup","getState","txt","closePopup","App","_togglePopup","Fragment","Board_Board","Popup_Popup","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c3c1c53.chunk.js","sourcesContent":["const winCombinations = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n\n    [0, 4, 8],\n    [2, 4, 6]\n];\n\nexport const delay = (duration = 1000) => new Promise( resolve => setTimeout(resolve, duration));\n\nexport const findWinner = (matrix) => {\n    let winnerId;\n    let winnerCombination;\n\n    winCombinations.every( (combination)=>{\n        const [a,b,c] = combination;\n        if( matrix[a] !== null && matrix[a] === matrix[b] && matrix[a] === matrix[c] ) {\n            winnerId = matrix[a];\n            winnerCombination = combination;\n            return false;\n        }\n        return true;\n    } );\n\n    return {\n        combination: winnerCombination,\n        user: ( winnerId !== void(0) ) && winnerId\n    };\n};\n\nexport const findBestStep = ( matrix, user ) => {\n    let bestKeySteps = [];\n    let possibility = 3;\n\n    //if it first step\n    if( matrix.indexOf(user) === -1 ) {\n        bestKeySteps = matrix.map( (el, i) => el === null && i ).filter( key => key !== false );\n        return {\n            countSteps: possibility,\n            step: bestKeySteps[Math.floor(Math.random()*bestKeySteps.length)]\n        };\n    }\n\n    winCombinations.forEach( combination => {\n        const [a,b,c] = combination;\n\n        if( (matrix[a] === null || matrix[a] === user) &&\n            (matrix[b] === null || matrix[b] === user) &&\n            (matrix[c] === null || matrix[c] === user)\n        ) {\n            const temp = [matrix[a], matrix[b], matrix[c]];\n            const tempPossibility = temp.filter( elm => elm === null ).length;\n\n            if( tempPossibility < possibility ) {\n                possibility = tempPossibility;\n                bestKeySteps = temp.map( ( elm, i ) => elm === null && combination[i] ).filter( elm => elm !== false )\n            }\n\n        }\n    } );\n\n    return {\n        countSteps: bestKeySteps.length,\n        step: bestKeySteps[Math.floor(Math.random()*bestKeySteps.length)] || matrix.findIndex(elm => elm === null)\n    };\n};\n","import { ADD_ITEM, CLEAR } from './types';\n\nconst initialState = {\n    history: [],\n};\n\nexport const tictactoeReducer = (state = initialState, action) =>{\n    switch (action.type ) {\n        case ADD_ITEM:\n            return {\n                ...state,\n                history: [ ...state.history, action.payload]\n            };\n        case CLEAR:\n            return {\n                ...state,\n                history: []\n            }\n        default:\n            return state;\n\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport { tictactoeReducer } from '../bus/tictactoe/reducer';\n\nexport const rootReducer = combineReducers({\n    tictactoe: tictactoeReducer,\n})","export const ADD_ITEM = \"ADD_ITEM\";\nexport const CLEAR = \"CLEAR\";","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport { rootReducer } from './rootReducer';\n\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools ? devtools : compose;\nconst enhancedStore = composeEnhancers( applyMiddleware() );\n\nexport const store = createStore(rootReducer, enhancedStore );","import { ADD_ITEM, CLEAR } from './types';\n\n\nexport const addItem =(text)=> {\n    return {\n        type: ADD_ITEM,\n        payload: text\n    }\n}\nexport const clear = () => {\n    return {\n        type: CLEAR,\n    }\n}","//core\nimport React, { Component } from 'react';\n\nimport { delay, findWinner, findBestStep } from '../../helper';\n\nimport {store} from '../../init/store'\nimport { addItem, clear } from '../../bus/tictactoe/actions'\n\nexport default class Board extends Component {\n    state = {\n        users: ['circle', 'cross' ],\n        currentUser: false,\n        status: false,\n        winner: false,\n        matrix: false,\n    };\n\n    componentWillMount() {\n        this._reset();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { matrix, users, currentUser } = this.state;\n\n        //matrix did update\n        if( prevState.matrix.join('') !== matrix.join('') ) {\n            const winner = findWinner( matrix );\n\n            if( winner.user !== false ) {\n                this.setState({\n                    status: false,\n                    winner\n                });\n\n                store.dispatch(addItem(`${new Date().toTimeString().slice(0,5)} ${users[winner.user]} won!`));\n            } else if( matrix.indexOf(null) === -1 ) {\n                    this.setState({\n                        status: false,\n                    });\n\n                    store.dispatch(addItem(`${new Date().toTimeString().slice(0,5)} it's a draw`));\n\n            } else if(currentUser === 0) {\n                this._goRobot();\n            }\n\n        }\n    }\n\n    _reset =()=>{\n        this.setState({\n            matrix: Array(9).fill(null),\n            currentUser: 1,\n            status: true,\n            winner: {\n                combination: [],\n                user: false\n            },\n        });\n\n        store.dispatch(clear());\n    };\n\n    _goRobot = () => {\n        const { matrix, currentUser } = this.state;\n\n        delay(500).then(()=>{\n            //rival step\n            const rival = findBestStep( matrix, currentUser ? 0 : 1 );\n\n            //robot step\n            const robot = findBestStep( matrix, currentUser );\n\n\n            if( rival.countSteps === 1 && robot.countSteps !== 1 ) { //if a robot can lose\n                this._selectCell( rival.step );\n            } else {\n                this._selectCell( robot.step );\n            }\n        });\n\n    };\n\n    _selectCell = (key) => {\n        const { matrix, users, currentUser } = this.state;\n\n        const rowText = `Row${ Math.ceil(key /3) }`;\n        const colText = `Col${ (()=>{\n            if( key % 3 == 0 ) return 1;\n            if( key % 2 == 0 ) return 2;\n            return 3;\n        })() }`;\n\n        store.dispatch(addItem(`${new Date().toTimeString().slice(0,5)} ${users[currentUser]} ${rowText} ${colText}`));\n\n\n        this.setState({\n            matrix: [...matrix].fill( currentUser, key, key+1 ),\n            currentUser: currentUser ? 0 : 1\n        } );\n    };\n\n    _clickOnCell = (key) => () => {\n        const { matrix, currentUser, status } = this.state;\n\n        if( matrix[key] !== null || !status || currentUser !== 1 ) return;\n\n        this._selectCell(key);\n    };\n\n    _statusText = () => {\n        const { matrix, users, winner: { user: winnerUser, combination: winnerCombination }, currentUser } = this.state;\n\n        if( matrix.indexOf( null ) === -1 && winnerUser === false ) {\n            return \"It's a draw\"\n        }\n\n        return winnerUser === false ? `Turn ${users[currentUser]}`: `Player ${users[winnerUser]} won!`;\n    };\n\n    render( ){\n        const { matrix, users, winner: { combination: winnerCombination } } = this.state;\n        const { showPopup: _showPopup } = this.props;\n\n        const matrixJSX = matrix.map((user, key) => {\n            let styleClass = 'tictactoe__cell';\n\n            if ( winnerCombination.indexOf(key) !== -1 ) {\n                styleClass += ' -won';\n            }\n\n            return <div key={key} onClick={ this._clickOnCell(key) } className={styleClass}>\n                        <div className={ user !== null ? `-${users[user]}` : '' }></div>\n                   </div>\n        } );\n\n\n        return (\n            <div className=\"tictactoe\">\n                <div className=\"tictactoe__title\">{ this._statusText() }</div>\n                <div className=\"tictactoe__board\">\n                    {matrixJSX}\n                </div>\n                <div className=\"tictactoe__footer\">\n                    <button onClick={ this._reset }>Reset</button>\n                    <button onClick={ _showPopup }>Show Logs</button>\n                </div>\n            </div>\n        )\n    }\n}\n","//core\nimport React, { Component } from 'react';\n\nimport {store} from '../../init/store'\n\nexport default class Popup extends Component {\n\n    render( ){\n        const { tictactoe: {history} } = store.getState();\n\n        return (\n            <div className=\"popup\">\n                <div className=\"popup__inner\">\n                    <h3>Logs</h3>\n                    <div className=\"popup__list\">\n                        <ol>\n                            { history.length ? history.map( (txt, key) => <li key={key}>{txt}</li> ) : '<li>Plz, go to play!</li>' }\n                        </ol>\n                    </div>\n                    <button onClick={this.props.closePopup}>Close</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\n\n//Components\nimport Board from './components/Board';\nimport Popup from './components/Popup';\n\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    showPopup: false\n  };\n\n  _togglePopup = () => {\n    this.setState({\n      showPopup: !this.state.showPopup\n    } );\n  };\n\n  render( ){\n    const {showPopup} = this.state;\n\n    return (\n        <>\n          <Board showPopup={this._togglePopup}/>\n          { showPopup ? <Popup closePopup={this._togglePopup} /> : ''}\n        </>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}